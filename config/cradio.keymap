/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        holdkp_tapto: holdkp_tapto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&to>;

            label = "HOLDKP_TAPTO";
        };
    };

    combos {
        compatible = "zmk,combos";

        fn_1-0 {
            bindings = <&to 5>;
            key-positions = <30 33>;
        };

        reset_rt {
            bindings = <&sys_reset>;
            key-positions = <0 22 31>;
        };

        reset_lt {
            bindings = <&sys_reset>;
            key-positions = <9 17 32>;
        };

        bootloader_rt {
            bindings = <&bootloader>;
            key-positions = <0 12 31 4>;
        };

        bootloader_lt {
            bindings = <&bootloader>;
            key-positions = <9 17 32 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W  &kp E       &kp R               &kp T                     &kp Y                   &kp U                         &kp I          &kp O         &mt BACKSPACE P
&mt LEFT_SHIFT A  &kp S  &hm LALT D  &hm LGUI F          &kp G                     &kp H                   &hm RGUI J                    &hm RALT K     &kp L         &mt ENTER SEMICOLON
&kp Z             &kp X  &kp C       &kp V               &kp B                     &kp N                   &kp M                         &mt SQT COMMA  &mt EXCL DOT  &mt BSLH FSLH
                                     &mt LEFT_SHIFT TAB  &mt LEFT_CONTROL SPACE    &mt LEFT_CONTROL SPACE  &holdkp_tapto LEFT_COMMAND 1
            >;
        };

        left_layer {
            bindings = <
&kp ESC    &kp AT      &td LC(LG(LS(N4))) LS(N3)  &kp DLLR          &kp PRCNT     &kp CARET  &kp LS(COMMA)  &kp LS(DOT)  &kp SEMI  &kp BSPC
&kp TAB    &kp EQUAL   &kp LA(RBKT)               &kp LA(LS(RBKT))  &kp SQT       &kp BSLH   &kp LBRC       &kp RBRC     &kp PIPE  &kp ENTER
&kp TILDE  &kp LA(N3)  &kp LA(LBKT)               &kp LA(LS(LBKT))  &kp DQT       &kp LBKT   &kp LPAR       &kp RPAR     &kp RBKT  &to 3
                                                  &to 0             &sk LSHIFT    &sk RALT   &to 2
            >;
        };

        right_layer {
            bindings = <
&kp ESC  &kp C_PP  &kp C_PREV    &kp C_NEXT    &kp LS(MINUS)    &kp MINUS  &kp N7  &kp N8  &kp N9  &kp BACKSPACE
&kp TAB  &gresc    &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL)    &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp ENTER
&to 4    &kp AMPS  &kp SLASH     &kp STAR      &kp DOT          &kp N0     &kp N1  &kp N2  &kp N3  &trans
                                 &to 0         &sk LGUI         &sk RALT   &to 2
            >;
        };

        tri_layer {
            bindings = <
&kp F2               &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &kp N5     &kp LG(LBKT)  &kp LC(LS(TAB))  &kp RC(TAB)   &kp LG(RBKT)  &trans
&kp F1               &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp DEL    &kp LEFT      &kp DOWN         &kp UP        &kp RIGHT     &kp ENTER
&td LG(GRAVE) GRAVE  &mkp RCLK       &msc SCRL_UP    &msc SCRL_DOWN   &trans     &mkp LCLK     &kp PG_DN        &kp K_VOL_DN  &trans        &trans
                                                     &to 0            &trans     &sk RALT      &to 1
            >;
        };

        bt {
            bindings = <
&trans          &trans  &trans      &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans
&trans          &trans  &trans      &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans
&studio_unlock  &trans  &bt BT_CLR  &trans  &bt BT_SEL 2    &bt BT_CLR    &trans  &trans  &trans  &bootloader
                                    &to 0   &trans          &trans        &to 1
            >;
        };

        layer_5 {
            bindings = <
&kp F1   &kp F2  &kp F3     &kp F4     &kp F5      &kp F6     &kp F7    &kp F8    &kp F9    &kp F10
&kp N1   &kp N2  &kp N3     &kp N4     &kp N5      &kp N6     &kp N7    &kp N8    &kp N9    &kp N0
&kp TAB  &trans  &kp EQUAL  &kp MINUS  &kp PLUS    &kp STAR   &kp FSLH  &kp LBKT  &kp RBKT  &kp BSLH
                            &to 0      &trans      &kp EQUAL  &to 2
            >;
        };

        extra_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
